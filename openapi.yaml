openapi: 3.0.1
info:
  title: Luis' API
  version: '1.0'
  description: A test API
  termsOfService: https://test.example.com/tos
  contact:
    email: lberrocal@example.com
    name: lberrocal
    url: https://test.example.com/contact
  license:
    name: License
    url: https://test.example.com/tos
servers:
  - url: http://localhost:{port}
    variables:
      port:
        default: '3000'
        enum:
          - '3000'
          - '3001'
        description: '3000; Development, 3001: NotUsed'
    description: Local Server
  - url: https://my-json-server.typicode.com/lberrocal/open-api-workshop
    variables: {}
    description: User API
paths:
  /users:
    summary: User level Operations
    description: Create and read users
    get:
      summary: fetch users
      description: Read users from the server
      operationId: fetchUsers
      responses:
        2XX:
          $ref: '#/components/responses/UserArrayResponseBody'
        default:
          description: Default error sample response
      tags:
        - users
    post:
      requestBody:
        $ref: '#/components/requestBodies/UserPostBody'
      summary: Create a new user
      description: Stores a user on the server
      operationId: createUser
      responses:
        '201':
          $ref: '#/components/responses/UserResponseBody'
        default:
          description: Default error sample response
      tags:
        - users
  /users/{userId}:
    summary: specific user operation
    description: fetch, update, delete user
    parameters:
      - name: userId
        in: path
        required: true
        description: user id
        schema:
          type: string
          example: 1234abc
    get:
      summary: Fetch specific user
      description: Fetch a user by an Id
      operationId: fetchUser
      responses:
        '200':
          $ref: '#/components/responses/UserResponseBody'
        default:
          description: Default error sample response
      tags:
        - users
components:
  requestBodies:
    UserPostBody:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PostNewUser'
  responses:
    UserArrayResponseBody:
      description: user array response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserArray'
    UserResponseBody:
      description: user creation response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/FullUser'
  schemas:
    UserArray:
      type: array
      items:
        $ref: '#/components/schemas/PostNewUser'
    PostNewUser:
      type: object
      properties:
        username:
          type: string
          example: luis
        score:
          type: integer
          example: 55
        active:
          type: boolean
          example: true
    FullUser:
      allOf:
        - type: object
          properties:
            id:
              type: string
              example: anc123
        - $ref: '#/components/schemas/PostNewUser'
